[tox]
envlist =
    lint
    {py311}-test
    build-eth-rpc
    build-eth-typeshed
isolated_build = True

[testenv:build-eth-rpc]
description = Build the eth-rpc package.
basepython = py311
changedir = packages/eth_rpc
extras = build
commands =
    python -m pip install build
    python -m build


[testenv:build-eth-typeshed]
description = Build the eth-typeshed package.
basepython = py311
changedir = packages/eth_typeshed
extras = build
commands =
    python -m build


[testenv:lint]
description = Run static checkers.
basepython = py311
allowlist_externals = black, isort
extras = lint
commands =
    black . --check
    isort . --check-only


[testenv:format]
description = Format code.
basepython = py311
extras = lint
allowlist_externals = black, isort
commands =
    black .
    isort .

[testenv:{py311}-test]
description = Run doc tests and unit tests.
package = wheel
allowlist_externals = pytest
extras = test
setenv =
    PY_IGNORE_IMPORTMISMATCH=1 # https://github.com/pytest-dev/pytest/issues/2042
commands =
    pip install ./packages/eth_rpc
    pip install ./packages/eth_typeshed
    # Run tests and doctests from .py files
    pytest packages/eth_rpc --junitxml=reports/pytest.xml.{envname} {posargs}
    pytest packages/eth_typeshed --junitxml=reports/pytest.xml.{envname} {posargs}


[testenv:combine-test-reports]
description = Combine test and coverage data from multiple test runs.
skip_install = true
setenv =
    COVERAGE_FILE = reports/.coverage
depends = {py311}-test
deps =
    junitparser
    coverage[toml]
commands =
    junitparser merge --glob reports/pytest.xml.* reports/pytest.xml
    coverage combine --keep
    coverage html

[testenv:docs]
description = Test and build the docs.
extras = docs
commands =


[testenv:build]
description = Build the package.
extras = build
commands =

[gh-actions]
python = 
  3.11: py311
