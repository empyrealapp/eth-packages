[tox]
envlist =
    lint
    test_all
    build_eth_rpc
    build_eth_typeshed
    build_eth_protocols
    build_eth_streams
isolated_build = True

[testenv:build_eth_rpc]
description = Build the eth-rpc package.
basepython = py311
changedir = packages/eth_rpc
allowlist_externals = sh
deps = build
extras = build
commands =
    sh -c "export PACKAGE_VERSION=$(python {toxinidir}/get_version.py) && python -m build"

[testenv:build_eth_typeshed]
description = Build the eth-typeshed package.
basepython = py311
changedir = packages/eth_typeshed
allowlist_externals = sh
deps = build
extras = build
commands =
    sh -c "export PACKAGE_VERSION=$(python {toxinidir}/get_version.py) && python -m build"

[testenv:build_eth_protocols]
description = Build the eth-protocols package.
basepython = py311
changedir = packages/eth_protocols
allowlist_externals = sh
deps = build
extras = build
commands =
    sh -c "export PACKAGE_VERSION=$(python {toxinidir}/get_version.py) && python -m build"

[testenv:build_eth_streams]
description = Build the eth-streams package.
basepython = py311
changedir = packages/eth_streams
allowlist_externals = sh
deps = build
extras = build
commands =
    sh -c "export PACKAGE_VERSION=$(python {toxinidir}/get_version.py) && python -m build"

[testenv:lint]
description = Run static checkers.
basepython = py311
changedir = {toxinidir}
allowlist_externals = black, isort
extras = lint
deps =
    black
    isort
commands =
    black . --check
    isort . --check-only


[testenv:format]
description = Format code.
basepython = py311
extras = lint
changedir = {toxinidir}
allowlist_externals = black, isort
deps =
    black
    isort
commands =
    black .
    isort .


[testenv:test_eth_rpc]
setenv =
    PYTHONPATH = ./src
commands_pre =
    pip install .[test]
changedir = packages/eth_rpc
commands = pytest {posargs} --cov=eth_rpc --cov-report=xml:.reports/coverage.xml.{envname} --junitxml={toxinidir}/.reports/pytest.xml.{envname} {posargs}


[testenv:test_eth_typeshed]
setenv =
    PYTHONPATH = ./src
commands_pre =
    pip install {toxinidir}/packages/eth_rpc
    pip install .[test]
changedir = packages/eth_typeshed
commands = pytest {posargs} --cov=eth_typeshed --cov-report=xml:.reports/coverage.xml.{envname} --junitxml={toxinidir}/.reports/pytest.xml.{envname} {posargs}


[testenv:test_eth_protocols]
setenv =
    PYTHONPATH = ./src
commands_pre =
    pip install {toxinidir}/packages/eth_rpc
    pip install {toxinidir}/packages/eth_typeshed
    pip install .[test]
changedir = packages/eth_protocols
commands = pytest {posargs} --cov=eth_protocols --cov-report=xml:.reports/coverage.xml.{envname} --junitxml={toxinidir}/.reports/pytest.xml.{envname} {posargs}


[testenv:test_eth_streams]
setenv =
    PYTHONPATH = ./src
commands_pre =
    pip install {toxinidir}/packages/eth_rpc
    pip install {toxinidir}/packages/eth_typeshed
    pip install {toxinidir}/packages/eth_protocols
    pip install .[test]
changedir = packages/eth_streams
commands = pytest {posargs} --cov=eth_streams --cov-report=xml:.reports/coverage.xml.{envname} --junitxml={toxinidir}/.reports/pytest.xml.{envname} {posargs}


[testenv:combine_test_reports]
description = Combine test and coverage data from multiple test runs.
skip_install = true
setenv =
    COVERAGE_FILE = .reports/.coverage
depends = test_eth_rpc, test_eth_typeshed
deps =
    junitparser
    coverage[toml]
commands =
    junitparser merge --glob .reports/pytest.xml.* .reports/pytest.xml
    coverage combine --keep
    coverage html


[testenv:test_all]
description = Run all tests.
allowlist_externals = tox
skip_install = true
commands =
    tox -e test_eth_rpc
    tox -e test_eth_typeshed
    tox -e test_eth_protocols
    tox -e test_eth_streams

[testenv:docs]
description = Test and build the docs.
extras = docs
commands =

[gh-actions]
python = 
  3.11: py311
